// <auto-generated />
using System;
using JotterService.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JotterService.SqliteMigrations.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220227131706_SecretCypher")]
    partial class SecretCypher
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("JotterService.Domain.Password", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasMaxLength(320)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Title");

                    b.HasIndex("Url");

                    b.ToTable("Password", (string)null);
                });

            modelBuilder.Entity("JotterService.Domain.Password", b =>
                {
                    b.OwnsOne("JotterService.Domain.CypherText", "Secret", b1 =>
                        {
                            b1.Property<Guid>("PasswordId")
                                .HasColumnType("TEXT");

                            b1.Property<byte[]>("Iv")
                                .IsRequired()
                                .HasColumnType("BLOB");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("PasswordId");

                            b1.ToTable("Password");

                            b1.WithOwner()
                                .HasForeignKey("PasswordId");
                        });

                    b.Navigation("Secret")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
